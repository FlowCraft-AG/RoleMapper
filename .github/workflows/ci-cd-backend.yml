name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - caleb
    tags:
      - 'v*'  # Nur f√ºr Versionstags (z.B. v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Print ref name
        run: echo "This workflow was triggered by ${{ github.ref_name }}"
        working-directory: .

      - name: Print actor
        run: echo "The actor is ${{ github.actor }}"
        working-directory: .

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check working directory
        run: pwd

      - name: List backend directory
        run: ls -al backend

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Build project
        run: npm run build
        working-directory: backend

      - name: Compile TypeScript
        run: npx tsc
        working-directory: backend

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: backend/dist

      - name: Zip node_modules
        run: zip -r nm.zip node_modules
        working-directory: backend

      - name: Upload node_modules folder
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: backend/nm.zip

  analyze:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Lint code
        run: npm run eslint
        working-directory: backend

      - name: Security audit
        run: npm audit --omit=dev
        working-directory: backend

      - name: Generate documentation (TypeDoc)
        run: npm run typedoc
        working-directory: backend

  package:
    runs-on: ubuntu-latest
    needs: [build, analyze]
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: backend/dist

      - name: Package distribution
        run: zip -r dist.zip dist
        working-directory: backend

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: dist-package-${{ matrix.node-version }}
          path: backend/dist.zip

  docker:
    runs-on: ubuntu-latest
    needs: package
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist-package-${{ matrix.node-version }}
          path: backend/

      - name: Unzip dist folder
        run: unzip dist.zip -d ./dist
        working-directory: backend

      - name: Build Docker image
        run: |
          docker build -t flowcraft/role-mapper:2024.12.1 .
        working-directory: backend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to registry
        run: |
          docker tag flowcraft/role-mapper:2024.12.1 calebscript/role-mapper:2024.12.1
          docker push calebscript/role-mapper:2024.12.1
